import pyface.qt
from mayavi.mlab import *
import numpy
import matplotlib.pyplot as plt
import mplstereonet




#plots triangular mesh using clusters as scalar for shading
#inputs: path to xml collada file, clusters array generated by kmeans
#outputs: shaded 3d model
def colored_model(vertices, triangleMap, clusters):
    print ("generating model")

    x = [vertices[i][0] for i in range(0, len(vertices))]
    y = [vertices[i][1] for i in range(0, len(vertices))]
    z = [vertices[i][2] for i in range(0, len(vertices))]

    mesh = triangular_mesh(x, y, z, triangleMap,representation='wireframe',opacity=0)
    mesh.mlab_source.dataset.cell_data.scalars = clusters
    mesh.mlab_source.dataset.cell_data.scalars.name = 'Clusters'
    mesh.mlab_source.update()
    mesh.parent.update()

    mesh2 = pipeline.set_active_attribute(mesh, cell_scalars='Clusters')
    pipeline.surface(mesh2)
    show()


def plot_stereonet(normals, cluster_centers):
    print "plotting stereonet"
    numpy.seterr(divide='ignore', invalid='ignore')
    print "plotting cluster centers"
    plunge, bearing = get_trend_plunge(normals)
    cc_plunge, cc_bearing = get_trend_plunge(cluster_centers)
    fig = plt.figure()
    ax = fig.add_subplot(111, projection='stereonet')
    print "contouring"
    ax.density_contourf(plunge, bearing, measurement='lines', cmap = 'Reds')
    #kamb, schmidt
    ax.line(cc_plunge, cc_bearing, marker='o', color='black')
    ax.grid()
    plt.show()

def get_trend_plunge(normals):

    x,y,z = numpy.transpose(normals)
    plunge, bearing = mplstereonet.vector2plunge_bearing(x, y, z)
    #mplstereonet.normal2pole(x,y,z)

    plunge = plunge[numpy.logical_not(numpy.isnan(plunge))]
    bearing = bearing[numpy.logical_not(numpy.isnan(bearing))]

    return plunge, bearing


